CREATE OR REPLACE DEFINER = `developer`@`%` PROCEDURE `update_fs_prices`()
BEGIN
	set @start := NOW();
    set @name := 'update_fs_prices';
    insert into _procedure_calls (name, start, finish) value (@name, @start, null);
    -- очищаем изменяемые значения
    TRUNCATE TABLE fs_prices;
-- 	-- вносим исторические данные для новых компаний 
	INSERT INTO fs_prices (close, date, company_id, volume, period)
	SELECT  close, CONCAT_WS('-', YEAR(date), '12', '31') AS date, company_id, volume,
			CASE 
			when YEAR(CURRENT_DATE()) - 1 = YEAR(t.date)  then 'year'
		END as period
	FROM(
		SELECT *,
				ROW_NUMBER() over(PARTITION BY company_id, YEAR(date) ORDER BY `date` DESC) AS num
		FROM prices
		) t 
	WHERE num = 1 and YEAR(t.date) != YEAR(CURRENT_DATE());

--     
    INSERT INTO fs_prices (close, date, company_id, volume, period)		
	SELECT `close`, date, company_id, volume, 'max'
	FROM prices p
	WHERE `date` = (SELECT MIN(date) FROM prices p2 where p.company_id = p2.company_id);

    -- вносим данные, которые меняются, если интервал выпадает на выходной, берем данные за пятницу     
	INSERT INTO fs_prices (close, date, company_id, volume, period)	
	SELECT `close`, date, company_id, volume,
			CASE 
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 DAY) not in (5,6), CURRENT_DATE() - INTERVAL 1 DAY, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 DAY) in (5), CURRENT_DATE() - INTERVAL 2 DAY, CURRENT_DATE() - INTERVAL 3 DAY))
				= p.date  then 'current'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 2 DAY) not in (5,6), CURRENT_DATE() - INTERVAL 2 DAY, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 2 DAY) in (5), CURRENT_DATE() - INTERVAL 4 DAY, CURRENT_DATE() - INTERVAL 4 DAY))
				= p.date  then 'day'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 WEEK) not in (5,6), CURRENT_DATE() - INTERVAL 1 WEEK, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 WEEK) in (5), CURRENT_DATE() - INTERVAL 1 WEEK - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 1 WEEK - INTERVAL 2 DAY)) = p.date  then 'week'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 MONTH) not in (5,6), CURRENT_DATE() - INTERVAL 1 MONTH, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 MONTH) in (5), CURRENT_DATE() - INTERVAL 1 MONTH - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 1 MONTH - INTERVAL 2 DAY))= p.date  then 'month'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 MONTH) not in (5,6), CURRENT_DATE() - INTERVAL 3 MONTH, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 MONTH) in (5), CURRENT_DATE() - INTERVAL 3 MONTH - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 3 MONTH - INTERVAL 2 DAY))= p.date  then '3month'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 6 MONTH) not in (5,6), CURRENT_DATE() - INTERVAL 6 MONTH, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 6 MONTH) in (5), CURRENT_DATE() - INTERVAL 6 MONTH - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 6 MONTH - INTERVAL 2 DAY))= p.date  then '6month'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 1 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 YEAR) in (5), CURRENT_DATE() - INTERVAL 1 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 1 YEAR - INTERVAL 2 DAY)) = p.date  then '1year'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 3 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 YEAR) in (5), CURRENT_DATE() - INTERVAL 3 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 3 YEAR - INTERVAL 2 DAY)) = p.date  then '3year'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 5 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 5 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 5 YEAR) in (5), CURRENT_DATE() - INTERVAL 5 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 5 YEAR - INTERVAL 2 DAY)) = p.date  then '5year'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 10 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 10 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 10 YEAR) in (5), CURRENT_DATE() - INTERVAL 10 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 10 YEAR - INTERVAL 2 DAY)) = p.date  then '10year'
				when IF(WEEKDAY(CURRENT_DATE() - INTERVAL 52 WEEK) not in (5,6), CURRENT_DATE() - INTERVAL 52 WEEK, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 52 WEEK) in (5), CURRENT_DATE() - INTERVAL 52 WEEK - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 52 WEEK - INTERVAL 2 DAY)) = p.date  then '52weeks'
		END as period
	from prices p 
	where ( `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 DAY) not in (5,6), CURRENT_DATE() - INTERVAL 1 DAY, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 DAY) in (5), CURRENT_DATE() - INTERVAL 2 DAY, CURRENT_DATE() - INTERVAL 3 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 2 DAY) not in (5,6), CURRENT_DATE() - INTERVAL 2 DAY, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 2 DAY) in (5), CURRENT_DATE() - INTERVAL 4 DAY, CURRENT_DATE() - INTERVAL 4 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 WEEK) not in (5,6), CURRENT_DATE() - INTERVAL 1 WEEK, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 WEEK) in (5), CURRENT_DATE() - INTERVAL 1 WEEK - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 1 WEEK - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 MONTH) not in (5,6), CURRENT_DATE() - INTERVAL 1 MONTH, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 MONTH) in (5), CURRENT_DATE() - INTERVAL 1 MONTH - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 1 MONTH - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 MONTH) not in (5,6), CURRENT_DATE() - INTERVAL 3 MONTH, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 MONTH) in (5), CURRENT_DATE() - INTERVAL 3 MONTH - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 3 MONTH - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 6 MONTH) not in (5,6), CURRENT_DATE() - INTERVAL 6 MONTH, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 6 MONTH) in (5), CURRENT_DATE() - INTERVAL 6 MONTH - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 6 MONTH - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 1 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 1 YEAR) in (5), CURRENT_DATE() - INTERVAL 1 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 1 YEAR - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 3 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 3 YEAR) in (5), CURRENT_DATE() - INTERVAL 3 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 3 YEAR - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 5 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 5 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 5 YEAR) in (5), CURRENT_DATE() - INTERVAL 5 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 5 YEAR - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 10 YEAR) not in (5,6), CURRENT_DATE() - INTERVAL 10 YEAR, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 10 YEAR) in (5), CURRENT_DATE() - INTERVAL 10 YEAR - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 10 YEAR - INTERVAL 2 DAY))
			or `date` = IF(WEEKDAY(CURRENT_DATE() - INTERVAL 52 WEEK) not in (5,6), CURRENT_DATE() - INTERVAL 52 WEEK, 
				IF(WEEKDAY(CURRENT_DATE() - INTERVAL 52 WEEK) in (5), CURRENT_DATE() - INTERVAL 52 WEEK - INTERVAL 1 DAY,
				CURRENT_DATE() - INTERVAL 52 WEEK - INTERVAL 2 DAY))
			);
       	
	update _procedure_calls SET finish=NOW() where name=@name and start=@start;
END;

call `update_fs_prices`();

						